resource "azurerm_key_vault" "guardian" {
  name                       = var.key_vault_settings.kv_name
  location                   = var.location
  resource_group_name        = data.azurerm_resource_group.guardian.name
  tenant_id                  = data.azurerm_client_config.current.tenant_id
  sku_name                   = var.key_vault_settings.kv_sku_name
  soft_delete_retention_days = 7
  enable_rbac_authorization  = false

  dynamic "network_acls" {
    for_each = var.private_deployment ? [1] : []
    content {
      default_action             = "Deny"
      bypass                     = "AzureServices"
      virtual_network_subnet_ids = [data.azurerm_subnet.private_endpoint.id]
    }
  }
}

resource "azurerm_key_vault_access_policy" "sp_to_kv" {
  key_vault_id = azurerm_key_vault.guardian.id
  tenant_id    = data.azurerm_client_config.current.tenant_id
  object_id    = data.azurerm_client_config.current.object_id

  secret_permissions = [
    "Backup",
    "Delete",
    "Get",
    "List",
    "Purge",
    "Recover",
    "Restore",
    "Set"
  ]
}

resource "azurerm_private_endpoint" "key_vault" {
  count               = var.private_deployment ? 1 : 0
  name                = "pe-${azurerm_key_vault.guardian.name}-vault"
  location            = var.location
  resource_group_name = data.azurerm_resource_group.guardian.name
  subnet_id           = data.azurerm_subnet.private_endpoint.id
  private_service_connection {
    name                           = "psc-${azurerm_key_vault.guardian.name}-vault"
    is_manual_connection           = false
    private_connection_resource_id = azurerm_key_vault.guardian.id
    subresource_names              = ["vault"]
  }
  ##private_dns_zone_group {
  ##  name                 = "default"
  ##  private_dns_zone_ids = [azurerm_private_dns_zone.vaultcore[0].id]
  ##}
}

resource "azurerm_key_vault_secret" "openai_mapping_secrets" {
  name         = "openAIMappingSecrets"
  value        = var.apim_settings_mapping_secrets
  key_vault_id = azurerm_key_vault.guardian.id

  depends_on = [azurerm_key_vault_access_policy.sp_to_kv]
}
